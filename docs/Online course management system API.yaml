openapi: 3.0.3
info:
  title: Online course management system API
  version: 1.0.0
  description: Online course management system
paths:
  /api/v1/auth/jwt/create/:
    post:
      operationId: api_v1_auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/auth/jwt/refresh/:
    post:
      operationId: api_v1_auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/jwt/verify/:
    post:
      operationId: api_v1_auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/v1/auth/users/:
    get:
      operationId: api_v1_auth_users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_v1_auth_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserCreate'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserCreate'
          description: ''
  /api/v1/auth/users/{id}/:
    get:
      operationId: api_v1_auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/activation/:
    post:
      operationId: api_v1_auth_users_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/v1/auth/users/me/:
    get:
      operationId: api_v1_auth_users_me_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_auth_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_auth_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_auth_users_me_destroy
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/resend_activation/:
    post:
      operationId: api_v1_auth_users_resend_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_password/:
    post:
      operationId: api_v1_auth_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_password_confirm/:
    post:
      operationId: api_v1_auth_users_reset_password_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/v1/auth/users/reset_username/:
    post:
      operationId: api_v1_auth_users_reset_username_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_username_confirm/:
    post:
      operationId: api_v1_auth_users_reset_username_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/v1/auth/users/set_password/:
    post:
      operationId: api_v1_auth_users_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/v1/auth/users/set_username/:
    post:
      operationId: api_v1_auth_users_set_username_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/v1/courses/:
    get:
      operationId: api_v1_courses_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseSerializersList'
          description: ''
    post:
      operationId: api_v1_courses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseSerializers'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSerializers'
          description: ''
  /api/v1/courses/{course_id}/lectures/:
    get:
      operationId: api_v1_courses_lectures_list
      description: ViewSet for lectures. multipart/form-data
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLectureSerializersList'
          description: ''
    post:
      operationId: api_v1_courses_lectures_create
      description: ViewSet for lectures. multipart/form-data
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LectureSerializers'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LectureSerializers'
          description: ''
  /api/v1/courses/{course_id}/lectures/{id}/:
    get:
      operationId: api_v1_courses_lectures_retrieve
      description: ViewSet for lectures. multipart/form-data
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LectureSerializers'
          description: ''
    patch:
      operationId: api_v1_courses_lectures_partial_update
      description: ViewSet for lectures. multipart/form-data
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLectureSerializers'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LectureSerializers'
          description: ''
    delete:
      operationId: api_v1_courses_lectures_destroy
      description: ViewSet for lectures. multipart/form-data
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/courses/{id}/:
    get:
      operationId: api_v1_courses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSerializers'
          description: ''
    patch:
      operationId: api_v1_courses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourseSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourseSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourseSerializers'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSerializers'
          description: ''
    delete:
      operationId: api_v1_courses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Course.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/homeworks/{homework_id}/submissions/:
    get:
      operationId: api_v1_homeworks_submissions_list
      description: ViewSet for submissions.
      parameters:
      - in: path
        name: homework_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubmissionSerializersList'
          description: ''
    post:
      operationId: api_v1_homeworks_submissions_create
      description: ViewSet for submissions.
      parameters:
      - in: path
        name: homework_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubmissionSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmissionSerializers'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionSerializers'
          description: ''
  /api/v1/homeworks/{homework_id}/submissions/{id}/:
    get:
      operationId: api_v1_homeworks_submissions_retrieve
      description: ViewSet for submissions.
      parameters:
      - in: path
        name: homework_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionSerializers'
          description: ''
    patch:
      operationId: api_v1_homeworks_submissions_partial_update
      description: ViewSet for submissions.
      parameters:
      - in: path
        name: homework_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionSerializers'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionSerializers'
          description: ''
    delete:
      operationId: api_v1_homeworks_submissions_destroy
      description: ViewSet for submissions.
      parameters:
      - in: path
        name: homework_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/lectures/{lecture_id}/homeworks/:
    get:
      operationId: api_v1_lectures_homeworks_list
      description: ViewSet for homeworks.
      parameters:
      - in: path
        name: lecture_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHomeWorkSerializersList'
          description: ''
    post:
      operationId: api_v1_lectures_homeworks_create
      description: ViewSet for homeworks.
      parameters:
      - in: path
        name: lecture_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeWorkSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HomeWorkSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HomeWorkSerializers'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeWorkSerializers'
          description: ''
  /api/v1/lectures/{lecture_id}/homeworks/{id}/:
    get:
      operationId: api_v1_lectures_homeworks_retrieve
      description: ViewSet for homeworks.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: lecture_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeWorkSerializers'
          description: ''
    patch:
      operationId: api_v1_lectures_homeworks_partial_update
      description: ViewSet for homeworks.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: lecture_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHomeWorkSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHomeWorkSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHomeWorkSerializers'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeWorkSerializers'
          description: ''
    delete:
      operationId: api_v1_lectures_homeworks_destroy
      description: ViewSet for homeworks.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: lecture_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/my/homeworks/:
    get:
      operationId: api_v1_my_homeworks_list
      description: ViewSet for my homeworks.
      parameters:
      - in: query
        name: created_at_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at_before
        schema:
          type: string
          format: date-time
      - in: query
        name: isgraded
        schema:
          type: boolean
      - in: query
        name: issubmitted
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMyHomeWorkSerializersList'
          description: ''
  /api/v1/my/homeworks/{id}/:
    get:
      operationId: api_v1_my_homeworks_retrieve
      description: ViewSet for my homeworks.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Homework.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyHomeWorkSerializers'
          description: ''
  /api/v1/submissions/{submission_id}/grade/:
    post:
      operationId: api_v1_submissions_grade_create
      description: ViewSet for creating/changing grades.
      parameters:
      - in: path
        name: submission_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GradeSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GradeSerializers'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeSerializers'
          description: ''
    patch:
      operationId: api_v1_submissions_grade_partial_update
      description: ViewSet for creating/changing grades.
      parameters:
      - in: path
        name: submission_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGradeSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGradeSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGradeSerializers'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeSerializers'
          description: ''
  /api/v1/submissions/grade/{grade_id}/comments/:
    get:
      operationId: api_v1_submissions_grade_comments_list
      description: ViewSet for comments.
      parameters:
      - in: path
        name: grade_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentSerializersList'
          description: ''
    post:
      operationId: api_v1_submissions_grade_comments_create
      description: ViewSet for comments.
      parameters:
      - in: path
        name: grade_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentSerializers'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentSerializers'
          description: ''
  /api/v1/submissions/grade/{grade_id}/comments/{id}/:
    get:
      operationId: api_v1_submissions_grade_comments_retrieve
      description: ViewSet for comments.
      parameters:
      - in: path
        name: grade_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentSerializers'
          description: ''
    patch:
      operationId: api_v1_submissions_grade_comments_partial_update
      description: ViewSet for comments.
      parameters:
      - in: path
        name: grade_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCommentSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCommentSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCommentSerializers'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentSerializers'
          description: ''
    delete:
      operationId: api_v1_submissions_grade_comments_destroy
      description: ViewSet for comments.
      parameters:
      - in: path
        name: grade_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    CommentSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        author:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
      required:
      - author
      - created_at
      - id
      - text
      - updated_at
    CourseSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        author:
          type: integer
          readOnly: true
        teachers:
          type: array
          items:
            type: integer
        students:
          type: array
          items:
            type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
      required:
      - author
      - created_at
      - id
      - title
      - updated_at
    CustomUserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - password
      - role
      - username
    GradeSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        score:
          type: integer
          maximum: 32767
          minimum: 0
        author:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
      required:
      - author
      - created_at
      - id
      - score
      - updated_at
    HomeWorkSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        lecture:
          type: integer
          readOnly: true
        author:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
      required:
      - author
      - created_at
      - id
      - lecture
      - text
      - updated_at
    LectureSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
          readOnly: true
        topic:
          type: string
          maxLength: 255
        teacher:
          type: integer
        presentation_file:
          type: string
          format: uri
          nullable: true
        datetime:
          type: string
          format: date-time
          nullable: true
          title: Schedulled date and time
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
      required:
      - course
      - created_at
      - id
      - teacher
      - topic
      - updated_at
    MyHomeWorkSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        lecture:
          type: integer
          readOnly: true
        submissions:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionSerializers'
        author:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
      required:
      - author
      - created_at
      - id
      - lecture
      - submissions
      - text
      - updated_at
    PaginatedCommentSerializersList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CommentSerializers'
    PaginatedCourseSerializersList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CourseSerializers'
    PaginatedHomeWorkSerializersList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HomeWorkSerializers'
    PaginatedLectureSerializersList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LectureSerializers'
    PaginatedMyHomeWorkSerializersList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MyHomeWorkSerializers'
    PaginatedSubmissionSerializersList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionSerializers'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedCommentSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        author:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
    PatchedCourseSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        author:
          type: integer
          readOnly: true
        teachers:
          type: array
          items:
            type: integer
        students:
          type: array
          items:
            type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
    PatchedGradeSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        score:
          type: integer
          maximum: 32767
          minimum: 0
        author:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
    PatchedHomeWorkSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        lecture:
          type: integer
          readOnly: true
        author:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
    PatchedLectureSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
          readOnly: true
        topic:
          type: string
          maxLength: 255
        teacher:
          type: integer
        presentation_file:
          type: string
          format: uri
          nullable: true
        datetime:
          type: string
          format: date-time
          nullable: true
          title: Schedulled date and time
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
    PatchedSubmissionSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        author:
          type: integer
          readOnly: true
        homework:
          type: integer
          readOnly: true
        grade:
          allOf:
          - $ref: '#/components/schemas/GradeSerializers'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
    PatchedUser:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
    RoleEnum:
      enum:
      - TEACHER
      - STUDENT
      type: string
      description: |-
        * `TEACHER` - Teacher
        * `STUDENT` - Student
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_username:
          type: string
          title: Username
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - current_password
      - new_username
    SubmissionSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        author:
          type: integer
          readOnly: true
        homework:
          type: integer
          readOnly: true
        grade:
          allOf:
          - $ref: '#/components/schemas/GradeSerializers'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Creation datetime
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Last updation datetime
      required:
      - author
      - created_at
      - grade
      - homework
      - id
      - text
      - updated_at
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
      required:
      - id
      - username
    UsernameResetConfirm:
      type: object
      properties:
        new_username:
          type: string
          title: Username
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - new_username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
